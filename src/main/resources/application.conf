encry {
  # Directory to keep data
  directory = ${user.dir}"/encry/data"

  # Settings for node view holder regime. See papers.yellow.ModifiersProcessing.md
  node {
    # Keep state root hash only and validate transactions via ADProofs
    ADState = false

    # Download block transactions and verify them (requires BlocksToKeep == 0 if disabled)
    verifyTransactions = true

    # Number of last blocks to keep with transactions and ADproofs, for all other blocks only header will be stored.
    # Keep all blocks from genesis if negative
    blocksToKeep = -1

    # Download PoPoW proof on node bootstrap
    PoPoWBootstrap = false

    # Minimal suffix size for PoPoW proof (may be pre-defined constant or settings parameter)
    minimalSuffix = 10

    # Is the node is doing mining
    mining = false

    # If true, a node generates blocks being offline. The only really useful case for it probably is to start a new
    # blockchain
    offlineGeneration = false

    # Delay for miner after succesful block creation
    miningDelay = 1s

    keepVersions = 200
  }

  testing {
    # Turn on transaction generator
    transactionGeneration = false

    # If generator is enabled, it generates transactions when mempool size is smaller than keepPoolSize
    keepPoolSize = 1
  }

  #Chain-specific settings. Change only if you are going to launch a new chain!
  chain {

    # Desired time interval between blocks
    desiredBlockInterval = 30s

    initialDifficulty = 10000

    # Number of last epochs that will  be used for difficulty recalculation
    retargetingEpochsQty = 10

    # Block Size in Bytes
    blockSize = 10000
  }
}
scorex {
  network {
    networkChunkSize = 400
    port = 9001
    nodeName = "encry-testnet"
    knownPeers = ["88.198.13.202:9001","139.59.254.126:9001","159.203.94.149:9001"]
    syncInterval = 15s
    syncStatusRefresh = 1m
    agentName = "encry-testnode"
  }
  restApi {
    bindAddress = "0.0.0.0"
    port = 9051
    swaggerInfo {
      description = "The Web Interface to the Encry API",
      title = "Encry API",
      termsOfService = "License: Creative Commons CC0",
//      contact {
//        name = ""
//        url = ""
//        email = ""
//      }
//      license {
//        name = ""
//        url = ""
//      }
    }
  }
}